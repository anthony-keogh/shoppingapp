############## url_patterns #########################################################



from django.conf.urls import include, url
from . import views
urlpatterns = [
     
     
     url('/likeproduct', likeProduct, name='likepost'),   # likepost view at /likepost
   ]






##################### html ####################################################


<body>
    <p id="message"></p>
    
    <a class="likebutton" id="like{{product.id}}" href="#" ><button class=" likebutton glyphicon glyphicon-shopping-cart" ng-click="count = count + 1"></button></a>
   

</body>





################## AJAX ##############################################




 <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>


    <script type="text/javascript">
    $('.likebutton').click(function(){
    
    $.ajax(
    {
        type:"GET",
        url: "/likeproduct",
        dataType:'json',
        success: function(data) 
        {
          console.log(JSON.stringify(data))  
        },
        error: function(request, status, error){
            console.log("Error:"+ error)
        }
     });
});
</script>


##################### models ################################


from django.contrib.auth.models import User

class Product(models.Model):
        user = models.ForeignKey(User, on_delete= models.CASCADE)
        product_text = models.TextField()
            def __unicode__(self):      # If python2 use __str__ if python3
                 return unicode(self.user.username)


class Like(models.Model):
        product = models.ForeignKey(Product)




################ views ##################################


def likeProduct(request):
        if request.method == 'GET':
               product_id = request.GET['product_id']
               likedproduct = Product.objects.get(pk=product_id) #getting the liked product
               m = Like(product=likedproduct) # Creating Like Object
               m.save()  # saving it to store in database
               return HttpResponse("Success!") # Sending an success response
        else:
               return HttpResponse("Request method is not a GET")
























#####################################################


Class Product(models.model)
    user = models.ForeignKey (User, on_delete= models.CASCADE)
    created_at = models.DateTimeField(auto_now_add = True)
    updated_at = models.DateTimeField(auto_now=True)

    def get_total_likes(self)
        return self.likes.users.count


